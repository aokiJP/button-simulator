{"version":3,"sources":["system/buttons.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAClD,OAAO,EACL,UAAU,EAEV,aAAa,EACb,UAAU,EACV,kBAAkB,EAClB,eAAe,EACf,eAAe,GAChB,MAAM,YAAY,CAAC;AACpB,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAEjD,IAAI,CAAC,GAAW,CAAC,CAAC;AAClB,IAAI,CAAC,GAAW,CAAC,CAAC;AAElB,MAAM,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;AAElD,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE;IACtB,KAAK,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,cAAc,EAAE,IAAI,aAAa,EAAE;QAC1E,cAAc,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;KAC5D;IACD,KAAK,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,kBAAkB,EAAE;QACrD,mBAAmB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KACvC;AACH,CAAC,EAAE,EAAE,CAAC,CAAC;AAEP,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE;IACtB,KAAK,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,kBAAkB,EAAE;QACrD,mBAAmB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KACvC;AACH,CAAC,EAAE,EAAE,CAAC,CAAC;AAEP,SAAS,cAAc,CACrB,OAAiB,EACjB,YAAoB,EACpB,WAAmB,EACnB,kBAA2B;IAE3B,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;QAC5B,MAAM,OAAO,GAAG,SAAS,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;QAE9G,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;gBACpB,IAAI,IAAI,GAAW,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBACtC,IAAI,GAAG,GAAW,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBACpC,MAAM,SAAS,GAAG,cAAc,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;gBAElD,IAAI,SAAS,GAAG,IAAI;oBAAE,OAAO;gBAE7B,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;gBAE1B,MAAM,aAAa,GAAG,cAAc,CAAC,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;gBAE5E,CAAC,CAAC,kBAAkB,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,aAAa,GAAG,CAAC,CAAC,CAAC;gBAE5E,KAAK,MAAM,KAAK,IAAI,UAAU,EAAE;oBAC9B,IAAI,WAAW,IAAI,KAAK;wBAAE,MAAM;oBAChC,CAAC,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBAC/B,QAAQ,KAAK,EAAE;wBACb,KAAK,aAAa,CAAC,CAAC;4BAClB,IAAI,IAAI,CAAC,CAAC;4BACV,GAAG,IAAI,CAAC,CAAC;4BACT,MAAM;yBACP;wBACD,KAAK,UAAU,CAAC,CAAC;4BACf,IAAI,IAAI,GAAG,CAAC;4BACZ,GAAG,IAAI,CAAC,CAAC;4BACT,MAAM;yBACP;wBACD,KAAK,eAAe,CAAC,CAAC;4BACpB,IAAI,IAAI,CAAC,CAAC;4BACV,GAAG,IAAI,CAAC,CAAC;4BACT,MAAM;yBACP;wBACD,KAAK,OAAO,CAAC,CAAC;4BACZ,IAAI,IAAI,EAAE,CAAC;4BACX,GAAG,IAAI,CAAC,CAAC;4BACT,MAAM;yBACP;wBACD,KAAK,UAAU,CAAC,CAAC;4BACf,IAAI,IAAI,EAAE,CAAC;4BACX,GAAG,IAAI,CAAC,CAAC;4BACT,MAAM;yBACP;wBACD,KAAK,OAAO,CAAC,CAAC;4BACZ,IAAI,IAAI,EAAE,CAAC;4BACX,GAAG,IAAI,CAAC,CAAC;4BACT,MAAM;yBACP;wBACD,KAAK,QAAQ,CAAC,CAAC;4BACb,IAAI,IAAI,EAAE,CAAC;4BACX,GAAG,IAAI,CAAC,CAAC;4BACT,MAAM;yBACP;wBACD,KAAK,SAAS,CAAC,CAAC;4BACd,IAAI,IAAI,EAAE,CAAC;4BACX,GAAG,IAAI,CAAC,CAAC;4BACT,MAAM;yBACP;wBACD,KAAK,OAAO,CAAC,CAAC;4BACZ,IAAI,IAAI,GAAG,CAAC;4BACZ,GAAG,IAAI,CAAC,CAAC;4BACT,MAAM;yBACP;qBACF;iBACF;gBAED,IAAI,kBAAkB,EAAE;oBACtB,MAAM,UAAU,GAAG,cAAc,CAAC,CAAC,EAAE,kBAAkB,CAAC,CAAC;oBACzD,CAAC,CAAC,kBAAkB,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC,EAAE,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;iBAC5F;YACH,CAAC,CAAC,CAAC;SACJ;QAED,CAAC,EAAE,CAAC;KACL;IACD,CAAC,GAAG,CAAC,CAAC;AACR,CAAC;AAED,SAAS,mBAAmB,CAAC,OAAiB,EAAE,WAAmB;IACjE,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;QAC5B,MAAM,OAAO,GAAG,SAAS,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;QAE9G,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;gBACpB,IAAI,IAAI,GAAW,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC3C,IAAI,GAAG,GAAW,eAAe,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBACzC,MAAM,SAAS,GAAG,cAAc,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;gBAExD,IAAI,SAAS,GAAG,IAAI;oBAAE,OAAO;gBAE7B,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;gBAE1B,MAAM,aAAa,GAAG,cAAc,CAAC,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;gBAE5E,CAAC,CAAC,kBAAkB,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,aAAa,GAAG,CAAC,CAAC,CAAC;gBAE5E,CAAC,CAAC,kBAAkB,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC,EAAE,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC;YAC1E,CAAC,CAAC,CAAC;SACJ;QACD,CAAC,EAAE,CAAC;KACL;IACD,CAAC,GAAG,CAAC,CAAC;AACR,CAAC","file":"../../buttonAddon/scripts/system/buttons.js","sourcesContent":["import { system, world } from \"@minecraft/server\";\nimport {\n  properties,\n  Button,\n  buttonConfigs,\n  buttonCost,\n  buttonConfigPoints,\n  propertiesArray,\n  buttonCostPoint,\n} from \"../configs\";\nimport { getScoreNumber } from \"../lib/getScore\";\n\nlet i: number = 0;\nlet j: number = 0;\n\nconst overworld = world.getDimension(\"overworld\");\n\nsystem.runInterval(() => {\n  for (const { buttons, costProp, addProp, multiplierProp } of buttonConfigs) {\n    processButtons(buttons, costProp, addProp, multiplierProp);\n  }\n  for (const { buttons, addProp } of buttonConfigPoints) {\n    processButtonsPoint(buttons, addProp);\n  }\n}, 10);\n\nsystem.runInterval(() => {\n  for (const { buttons, addProp } of buttonConfigPoints) {\n    processButtonsPoint(buttons, addProp);\n  }\n}, 20);\n\nfunction processButtons(\n  buttons: Button[],\n  costProperty: string,\n  addProperty: string,\n  multiplierProperty?: string\n): void {\n  for (const button of buttons) {\n    const players = overworld.getPlayers({ location: { x: button.x, y: button.y, z: button.z }, maxDistance: 1 });\n\n    if (players) {\n      players.forEach((p) => {\n        let cost: number = buttonCost[i].cost;\n        let add: number = buttonCost[i].add;\n        const costScore = getScoreNumber(p, costProperty);\n\n        if (costScore < cost) return;\n\n        p.playSound(\"random.orb\");\n\n        const buttonPressed = getScoreNumber(p, properties.playerInf.buttonPressed);\n\n        p.setDynamicProperty(properties.playerInf.buttonPressed, buttonPressed + 1);\n\n        for (const Class in properties) {\n          if (addProperty == Class) break;\n          p.setDynamicProperty(Class, 0);\n          switch (Class) {\n            case \"multiplayer\": {\n              cost *= 1;\n              add *= 1;\n              break;\n            }\n            case \"rebirths\": {\n              cost *= 1.5;\n              add *= 1;\n              break;\n            }\n            case \"superRebirths\": {\n              cost *= 2;\n              add *= 1;\n              break;\n            }\n            case \"ultra\": {\n              cost *= 10;\n              add *= 1;\n              break;\n            }\n            case \"prestige\": {\n              cost *= 15;\n              add *= 1;\n              break;\n            }\n            case \"grass\": {\n              cost *= 20;\n              add *= 1;\n              break;\n            }\n            case \"plants\": {\n              cost *= 25;\n              add *= 1;\n              break;\n            }\n            case \"flowers\": {\n              cost *= 50;\n              add *= 1;\n              break;\n            }\n            case \"bones\": {\n              cost *= 100;\n              add *= 1;\n              break;\n            }\n          }\n        }\n\n        if (multiplierProperty) {\n          const multiplier = getScoreNumber(p, multiplierProperty);\n          p.setDynamicProperty(addProperty, getScoreNumber(p, addProperty) + add * (multiplier + 1));\n        }\n      });\n    }\n\n    i++;\n  }\n  i = 0;\n}\n\nfunction processButtonsPoint(buttons: Button[], addProperty: string): void {\n  for (const button of buttons) {\n    const players = overworld.getPlayers({ location: { x: button.x, y: button.y, z: button.z }, maxDistance: 1 });\n\n    if (players) {\n      players.forEach((p) => {\n        let cost: number = buttonCostPoint[j].cost;\n        let add: number = buttonCostPoint[j].add;\n        const costScore = getScoreNumber(p, propertiesArray[j]);\n\n        if (costScore < cost) return;\n\n        p.playSound(\"random.orb\");\n\n        const buttonPressed = getScoreNumber(p, properties.playerInf.buttonPressed);\n\n        p.setDynamicProperty(properties.playerInf.buttonPressed, buttonPressed + 1);\n\n        p.setDynamicProperty(addProperty, getScoreNumber(p, addProperty) + add);\n      });\n    }\n    j++;\n  }\n  j = 0;\n}\n"],"sourceRoot":"../../../../scripts/"}