{"version":3,"sources":["system/statuses.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,YAAY,CAAC;AAEjE,MAAM,CAAC,IAAI,aAAa,GAA8B;IACpD,KAAK,EAAE,CAAC;IACR,WAAW,EAAE,CAAC;IACd,QAAQ,EAAE,CAAC;IACX,aAAa,EAAE,CAAC;IAChB,KAAK,EAAE,CAAC;IACR,QAAQ,EAAE,CAAC;IACX,KAAK,EAAE,CAAC;IACR,MAAM,EAAE,CAAC;IACT,OAAO,EAAE,CAAC;IACV,KAAK,EAAE,CAAC;CACT,CAAC;AAEF,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE;IACtB,KAAK,MAAM,MAAM,IAAI,KAAK,CAAC,aAAa,EAAE,EAAE;QAC1C,KAAK,MAAM,MAAM,IAAI,UAAU,EAAE;YAC/B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;gBAAE,SAAS;YAC1C,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE;gBAC/D,IAAI,OAAO,KAAK,KAAK,QAAQ;oBAAE,OAAO;gBACtC,KAAK,MAAM,KAAK,IAAI,UAAU,EAAE;oBAC9B,IAAI,GAAG,KAAK,KAAK;wBAAE,SAAS;oBAC5B,aAAa,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;iBAC/B;aACF;SACF;QACD,KAAK,MAAM,MAAM,IAAI,WAAW,EAAE;YAChC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;gBAAE,SAAS;YAC1C,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE;gBAC/D,IAAI,OAAO,KAAK,KAAK,QAAQ;oBAAE,OAAO;gBACtC,KAAK,MAAM,KAAK,IAAI,UAAU,EAAE;oBAC9B,IAAI,GAAG,KAAK,KAAK;wBAAE,SAAS;oBAC5B,aAAa,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;iBAC/B;aACF;SACF;KACF;AACH,CAAC,CAAC,CAAC","file":"../../buttonAddon/scripts/system/statuses.js","sourcesContent":["import { system, world } from \"@minecraft/server\";\nimport { eventStatus, obbyStatus, properties } from \"../configs\";\n\nexport let magnification: { [key: string]: number } = {\n  money: 1,\n  multiplayer: 1,\n  rebirths: 1,\n  superRebirths: 1,\n  ultra: 1,\n  prestige: 1,\n  grass: 1,\n  plants: 1,\n  flowers: 1,\n  bones: 1,\n};\n\nsystem.runInterval(() => {\n  for (const player of world.getAllPlayers()) {\n    for (const status of obbyStatus) {\n      if (!player.hasTag(status.name)) continue;\n      for (const [key, value] of Object.entries(status.magnification)) {\n        if (typeof value !== \"number\") return;\n        for (const Class in properties) {\n          if (key !== Class) continue;\n          magnification[Class] += value;\n        }\n      }\n    }\n    for (const status of eventStatus) {\n      if (!player.hasTag(status.name)) continue;\n      for (const [key, value] of Object.entries(status.magnification)) {\n        if (typeof value !== \"number\") return;\n        for (const Class in properties) {\n          if (key !== Class) continue;\n          magnification[Class] += value;\n        }\n      }\n    }\n  }\n});\n"],"sourceRoot":"../../../../scripts/"}